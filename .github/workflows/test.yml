name: Tests

on:
  push:
    branches:
      - '**'
    paths-ignore:
      - 'docs/**'
      - '**.md'
      - '.vscode/**'
  pull_request:
    branches: [ main ]
  repository_dispatch:
    types: [run-tests]
  workflow_dispatch:

jobs:
  tests:
    name: ${{ matrix.suite.name }} - Unity ${{ matrix.unity.version }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - ubuntu-20.04
        unity:
          # - { version: "2021.3.1f1" }
          # - { version: "2021.2.19f1" }
          - { version: "2021.1.28f1" }
          # - { version: "2020.3.33f1" }
          - { version: "2019.4.38f1" }
        suite:
          - { name: "Unit Tests", assemblies: "ReactUnity.Tests;ReactUnity.Tests.Editor" }
        include:
          - main: true
            coverage: true
            unity: { version: "2020.3.33f1" }
            suite: { name: "Unit Tests", assemblies: "ReactUnity.Tests;ReactUnity.Tests.Editor" }
          # - unity: { version: "2020.3.33f1" }
          #   suite: { name: "Performance Tests", assemblies: "Unity.PerformanceTesting.Tests.Runtime;Unity.PerformanceTesting.Tests.Editor", testBranch: "tests_2021_2" }
    runs-on: ${{ matrix.platform || 'ubuntu-20.04' }}
    steps:
      - name: Checkout core library
        uses: actions/checkout@v2
        with:
          path: core

      - name: Checkout test project
        uses: actions/checkout@v2
        with:
          ref: ${{ matrix.suite.testBranch || 'tests' }}
          path: tests

      - name: Cache Unity Library
        uses: actions/cache@v2
        with:
          path: tests/Library
          key: Library-${{ matrix.unity.version }}
          restore-keys: |
            Library-

      - name: Clear React Unity package lock
        run: echo $(cat tests/Packages/packages-lock.json | jq 'del(.dependencies["com.reactunity.core"])') > tests/Packages/packages-lock.json

      - name: Install local React Unity package
        run: echo $(cat tests/Packages/manifest.json | jq '.dependencies["com.reactunity.core"]="file:../../core"') > tests/Packages/manifest.json

      - name: Install TMP v2
        if: startsWith(matrix.unity.version, '2019')
        run: echo $(cat tests/Packages/manifest.json | jq '.dependencies["com.unity.textmeshpro"]="2.1.6"') > tests/Packages/manifest.json

      - name: Run Unity Tests
        uses: game-ci/unity-test-runner@v2
        id: testRunner
        continue-on-error: true
        env:
          UNITY_LICENSE: ${{ secrets[matrix.unity.license || 'UNITY_LICENSE'] }}
        with:
          unityVersion: ${{ matrix.unity.version }}
          customParameters: ${{ matrix.coverage && '-enableCodeCoverage -debugCodeOptimization -coverageOptions assemblyFilters:+ReactUnity,+ReactUnity.*' || '' }} -assemblyNames ${{ matrix.suite.assemblies }}
          checkName: ${{ matrix.suite.name }} ${{ matrix.unity.version }}
          projectPath: tests

      - name: Commit Snapshots
        if: hashFiles('core/Tests/.snapshots/snapshots.lock') != '' && matrix.main
        uses: EndBug/add-and-commit@v7
        with:
          add: 'Tests/.snapshots'
          cwd: './core'
          default_author: github_actions
          message: 'Update snapshots'
          pull: 'NO-PULL'


      # Workaround for NUnit XML (see https://github.com/dorny/test-reporter/issues/98#issuecomment-867106931)
      - name: Install NUnit
        run: |
          nuget install NUnit.Console -Version 3.12.0

      - name: Fetch transform code
        working-directory: "${{ github.workspace }}/${{ steps.testRunner.outputs.artifactsPath }}"
        run: |
          wget https://raw.githubusercontent.com/nunit/nunit-transforms/master/nunit3-junit/nunit3-junit.xslt
        shell: bash

      - name: Transform NUnit3 to JUnit
        working-directory: "${{ github.workspace }}/${{ steps.testRunner.outputs.artifactsPath }}"
        run: |
          Get-ChildItem . -Filter *.xml | Foreach-Object {
            $xml = Resolve-Path $_.FullName
            $output = Join-Path ($pwd) ($_.BaseName + '_junit.xml')
            $xslt = New-Object System.Xml.Xsl.XslCompiledTransform;
            $xslt.Load("nunit3-junit.xslt");
            $xslt.Transform($xml, $output);
          }
        shell: pwsh

      - uses: dorny/test-reporter@v1
        continue-on-error: true
        with:
          name: "${{ matrix.suite.name }} ${{ matrix.unity.version }}"
          path: "${{ github.workspace }}/${{ steps.testRunner.outputs.artifactsPath }}/*_junit.xml"
          reporter: java-junit
          working-directory: core


      - name: Upload Test Result Artifacts
        uses: actions/upload-artifact@v2
        if: always() && matrix.main
        with:
          name: "${{ matrix.suite.name }} ${{ matrix.unity.version }}"
          path: ${{ steps.testRunner.outputs.artifactsPath }}

      - name: Upload Code Coverage Artifacts
        uses: actions/upload-artifact@v2
        if: always() && matrix.coverage && matrix.main
        with:
          name: ${{ matrix.suite.name }} coverage
          path: CodeCoverage

      - name: Upload Coverage to codecov
        if: matrix.coverage && matrix.main
        uses: codecov/codecov-action@v2
        with:
          working-directory: ./core
          files: ../CodeCoverage/tests-opencov/PlayMode/TestCoverageResults_0000.xml,../CodeCoverage/tests-opencov/EditMode/TestCoverageResults_0000.xml
          flags: unittests
